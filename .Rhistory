library(openxlsx)
link="https://github.com/EvansDataScience/data/raw/master/safeCitiesIndexAll.xlsx"
safe=read.xlsx(link)
View(safe)
names(safe)
# all the questions with this: "H_In_"
grep("H_In_", colnames(safe) ) # ^ means starts with
# the 'head' of only those:
positionsIN=grep("H_In_", colnames(safe) )
head(safe[,c(1,positionsIN)])
pairs(safe[,c(positionsIN)])
library(ggplot2)
library(GGally) # may need to install
install.packages("GGally")
library(ggplot2)
library(GGally) # may need to install
ggcorr(safe[,-1], # all but the first column
hjust = 0.9,# distance to plot (diagonal)
size=1, # font size
layout.exp=4, # width so that variable names are shown
low = 'red',high = 'blue') # color scale
base= ggcorr(safe[,-1],size=1,layout.exp=4,hjust=0.9,
nbreaks = 3, # 3 intervals
palette = "PuOr")
base + guides(fill=guide_legend("some title")) # if you need a title for legend
library(reshape)
safeA=melt(safe,
id.vars = 'city') # the unit of analysis
head(safeA)
View(safeA)
base = ggplot(data = safeA, aes(x = variable,
y =city))
heat1= base +  geom_tile(aes(fill = value))
heat1
#inverse color -1
heat2 = heat1 + scale_fill_distiller(palette = "RdYlGn",direction = 1)
heat2
heat2 + theme(axis.text.x = element_text(angle = 90,
hjust = 1,
size = 4),
axis.text.y = element_text(size = 4))
# change in REORDER
base= ggplot(data = safeA, aes(x = reorder(variable,
value, median, order=TRUE),
y =reorder(city,
value, median, order=TRUE)))
# THIS IS THE SAME
base + geom_tile(aes(fill = value)) +
scale_fill_distiller(palette = "RdYlGn",direction = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1,size = 4),
axis.text.y = element_text(size = 4))
library(openxlsx)
link2="https://github.com/EvansDataScience/data/raw/master/safeCitiesIndex.xlsx"
safe2=read.xlsx(link2)
head(safe2)
safe2A=melt(safe2,id.vars = 'city')
head(safe2A)
?facet_wrap
base  = ggplot(safe2A, aes(x = variable, y = value, group = city))
plot1 = base + geom_polygon(fill = 'gray',col='orange') + coord_polar()
plot2 = plot1 + facet_wrap(~city,# one plot per city
ncol = 10) # ten plot per row
plot2
plot2 = plot1 + facet_wrap(~reorder(city,value, median, order=TRUE),ncol = 7)
plot3 = plot2 + theme(axis.text.x = element_text(size = 8))
plot3
plot3 = plot2 + theme(axis.text.x = element_text(size = 8),
legend.position="none",
strip.text = element_text(size = 20)) #here!!!
plot3
View(safe2A)
### arguments
brdBkgnGrid=element_rect(fill = "white",colour = "red",
size = 3,linetype = "dashed")
lineGrid=element_line(size = 3,linetype = 'solid',colour = "blue")
### more customization
plot3+ theme(panel.background = brdBkgnGrid,
panel.grid.major = lineGrid)
# copy data
safe2x=safe2
head(safe2x)
# get minimun value by row
safe2x$min=apply(safe2x[,c(2:5)],1,min)
# turn this min values into a ranking
safe2x$min=rank(safe2x$min,ties.method ='first' )
# order city by ranking
cityRk=as.factor(safe2x[order(safe2x$min),]$city)
# turn city into ordered factor
safe2x$city=factor(safe2x$city,
levels= cityRk,
labels = cityRk,
ordered = T)
# delete column with ranks
safe2x$min=NULL
# get minimun value by row
safe2x$min=apply(safe2x[,c(2:5)],1,min)
# turn this min values into a ranking
safe2x$min=rank(safe2x$min,ties.method ='first' )
# order city by ranking
cityRk=as.factor(safe2x[order(safe2x$min),]$city)
# turn city into ordered factor
safe2x$city=factor(safe2x$city,
levels= cityRk,
labels = cityRk,
ordered = T)
# delete column with ranks
safe2x$min=NULL
View(safe2x)
head(safe2x)
str(safe2x)
library(ggiraph)
install.packages("ggiraph")
install.packages("ggiraphExtra")
library(ggiraph)
